apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    app: redis
    role: master
  name: redis-master
spec:
  replicas: 1
  selector:
    app: redis
    role: master
  template:
    metadata:
      labels:
        app: redis
        role: master
    spec:
      containers:
      - image: redis:2.8.23
        imagePullPolicy: IfNotPresent
        name: redis-master
        ports:
        - containerPort: 6379
          name: redis-server
          protocol: TCP
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    app: redis
    role: slave
  name: redis-slave
spec:
  replicas: 2
  selector:
    app: redis
    role: slave
  template:
    metadata:
      labels:
        app: redis
        role: slave
    spec:
      containers:
      - image: kubernetes/redis-slave:v2
        imagePullPolicy: IfNotPresent
        name: redis-slave
        ports:
        - containerPort: 6379
          name: redis-server
          protocol: TCP
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: redis
    role: master
  name: redis-master
spec:
  ports:
  - port: 6379
    protocol: TCP
    targetPort: redis-server
  selector:
    app: redis
    role: master
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: redis
    role: slave
  name: redis-slave
spec:
  ports:
  - port: 6379
    protocol: TCP
    targetPort: redis-server
  selector:
    app: redis
    role: slave
  sessionAffinity: None
  type: ClusterIP
